name: Terraform CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

env:
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_VAR_admin_password: ${{ secrets.ADMIN_PASSWORD }}
      TF_VAR_project_name: ${{ secrets.PROJECT_NAME }}
      TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
      TF_VAR_tenant_id: ${{ secrets.TENANT_ID }}

    outputs:
      plan_exitcode: ${{ steps.plan_ec.outputs.exitcode }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"
          terraform_wrapper: false

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform fmt
        working-directory: TF
        run: terraform fmt -check -diff || true

      - name: Terraform init
        working-directory: TF
        run: terraform init -input=false

      - name: Terraform validate
        working-directory: TF
        run: terraform validate

      - name: Terraform plan
        id: plan_run
        working-directory: TF
        run: |
          set -e
          terraform plan -input=false \
            -lock-timeout=300s \
            -detailed-exitcode \
            -var "project_name=${{ secrets.PROJECT_NAME }}" \
            -var "subscription_id=${{ secrets.SUBSCRIPTION_ID }}" \
            -var "tenant_id=${{ secrets.TENANT_ID }}" \
            -var "admin_password=${{ secrets.ADMIN_PASSWORD }}" \
            -out=tfplan -no-color || ec=$?
          if [ -z "${ec:-}" ]; then ec=0; fi
          echo "Terraform exit code: $ec"
          echo "exitcode=$ec" >> $GITHUB_OUTPUT

      - name: Expose plan exitcode
        id: plan_ec
        run: echo "exitcode=${{ steps.plan_run.outputs.exitcode }}" >> $GITHUB_OUTPUT

      - name: Upload plan artifact
        if: ${{ steps.plan_run.outputs.exitcode == '0' || steps.plan_run.outputs.exitcode == '2' }}
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: TF/tfplan
          retention-days: 7

  terraform-apply:
    name: Terraform Apply (requires approval)
    needs: terraform-plan
    if: ${{ needs.terraform-plan.outputs.plan_exitcode == '2' }}
    runs-on: ubuntu-latest
    environment: dev
    env:
      TF_VAR_admin_password: ${{ secrets.ADMIN_PASSWORD }}
      TF_VAR_project_name: ${{ secrets.PROJECT_NAME }}
      TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
      TF_VAR_tenant_id: ${{ secrets.TENANT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"
          terraform_wrapper: false

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: TF

      - name: Terraform init
        working-directory: TF
        run: terraform init -input=false

      - name: Terraform apply
        working-directory: TF
        run: terraform apply -input=false -lock-timeout=300s -no-color tfplan
